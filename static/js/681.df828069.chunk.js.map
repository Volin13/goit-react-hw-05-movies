{"version":3,"file":"static/js/681.df828069.chunk.js","mappings":"oPACA,EAA4B,gCAA5B,EAAuE,+BAAvE,EAA8G,4BAA9G,EAAkJ,4B,SCyClJ,EAnCiB,WAAO,IAAD,EACbA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,GAAS,CACxBC,SAAU,CAAC,WAAYJ,GACvBK,QAASC,EAAAA,KAELC,EAAI,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAUM,YAAb,aAAG,EAAgBD,KACvBE,EAAO,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAUQ,WAC1B,OACE,4BACE,eAAIC,UAAWC,EAAf,kBACCH,IAAW,SAAC,MAAD,UAAoBI,EAAAA,IACd,KAAb,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMO,UACL,2EAEG,OAAJP,QAAI,IAAJA,OAAA,EAAAA,EAAMO,QAAS,IACd,eAAIH,UAAWC,EAAf,SACGL,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACR,gBAAaP,UAAWC,EAAxB,UACGM,IACC,gBACEP,UAAWC,EACXO,IAAG,yCAAoCD,GACvCE,IAAKH,IAGRA,IARMD,EADD,QAgBnB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCredits/MovieCredits.module.css?4be3","components/MovieCredits/MovieCredits.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castTitle\":\"MovieCredits_castTitle__-ONam\",\"castList\":\"MovieCredits_castList__JsddR\",\"actor\":\"MovieCredits_actor__cc3dD\",\"image\":\"MovieCredits_image__Tf0bX\"};","import { useQuery } from '@tanstack/react-query';\nimport { CirclesWithBar } from 'react-loader-spinner';\nimport { useParams } from 'react-router-dom';\nimport { options } from '../../constants/constants';\nimport { fetchMovieCredits } from '../../services/fetchFilms';\nimport css from './MovieCredits.module.css';\n\nconst CastInfo = () => {\n  const { movieId } = useParams();\n  const castInfo = useQuery({\n    queryKey: ['castInfo', movieId],\n    queryFn: fetchMovieCredits,\n  });\n  const cast = castInfo?.data?.cast;\n  const loading = castInfo?.isFetching;\n  return (\n    <div>\n      <h3 className={css.castTitle}>Cast</h3>\n      {loading && <CirclesWithBar {...options} />}\n      {cast?.length === 0 && (\n        <p>We don't have any information about this movie</p>\n      )}\n      {cast?.length > 0 && (\n        <ul className={css.castList}>\n          {cast.map(({ id, name, profile_path }) => (\n            <li key={id} className={css.actor}>\n              {profile_path && (\n                <img\n                  className={css.image}\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                />\n              )}\n              {name}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default CastInfo;\n"],"names":["movieId","useParams","castInfo","useQuery","queryKey","queryFn","fetchMovieCredits","cast","data","loading","isFetching","className","css","options","length","map","id","name","profile_path","src","alt"],"sourceRoot":""}