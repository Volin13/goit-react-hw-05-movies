{"version":3,"file":"static/js/888.1655889c.chunk.js","mappings":"wQACA,EAA4C,gDAA5C,EAA+G,uCAA/G,EAAmK,iCAAnK,EAAuN,uCAAvN,EAA6Q,mCAA7Q,EAA8T,kCAA9T,EAA8W,kCAA9W,EAAua,2C,SCsFva,EA/EqB,WAAO,IAAD,YACnBA,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAeC,EAAAA,EAAAA,GAAS,CAC5BC,SAAU,CAAC,eAAgBJ,GAC3BK,QAASC,EAAAA,KAELC,EAAS,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAcM,KAC1BC,EAAO,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAcQ,WAC9B,IAAKH,EACH,OACE,4BACE,SAAC,KAAD,CAAMI,UAAWC,EAAgBC,GAAE,iBAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAUgB,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAA9D,4BAGCN,IAAW,SAAC,MAAD,UAAoBO,EAAAA,OAGtC,IACQC,EAA4DV,EAA5DU,MAAOC,EAAqDX,EAArDW,YAAaC,EAAwCZ,EAAxCY,aAAcC,EAA0Bb,EAA1Ba,SAA1C,EAAoEb,EAAhBc,OAAAA,OAApD,MAA6D,GAA7D,EACA,OACE,iBAAKV,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAgBC,GAAE,iBAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAUgB,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAA9D,4BAGCR,IACC,iCACE,iBAAKI,UAAWC,EAAhB,UACGM,GACC,gBACEP,UAAU,SACVW,IAAG,yCAAoCJ,GACvCK,IAAKN,KAGP,gBAAKK,IAjBG,4BAiBeC,IAAI,OAE7B,iBAAKZ,UAAWC,EAAhB,WACE,wBAAKK,KACL,2CAAmBO,KAAKC,KAAoB,GAAfN,GAA7B,QACA,uCACA,0BAAOC,KACP,qCACA,0BAAOC,EAAOK,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,eAG/C,iBAAKjB,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,sCACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CACEC,GAAG,OACHF,UAAWC,EACXE,MAAO,CAAEC,KAAI,OAAEjB,QAAF,IAAEA,GAAF,UAAEA,EAAUgB,aAAZ,aAAE,EAAiBC,MAHlC,qBAQF,yBACE,SAAC,KAAD,CACEF,GAAG,UACHF,UAAWC,EACXE,MAAO,CAAEC,KAAI,OAAEjB,QAAF,IAAEA,GAAF,UAAEA,EAAUgB,aAAZ,aAAE,EAAiBC,MAHlC,iCAYV,SAAC,EAAAc,SAAD,CAAUC,UAAU,SAAC,MAAD,UAAoBd,EAAAA,IAAxC,UACE,SAAC,KAAD,QAIP,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDescriptionContainer\":\"MovieDetails_movieDescriptionContainer__UVrRW\",\"movieDescription\":\"MovieDetails_movieDescription__ch+v2\",\"goBackLink\":\"MovieDetails_goBackLink__s0hSu\",\"addInfoContainer\":\"MovieDetails_addInfoContainer__ScM8W\",\"addInfoTitle\":\"MovieDetails_addInfoTitle__Ob9NR\",\"addInfoList\":\"MovieDetails_addInfoList__ubx6o\",\"addInfoItem\":\"MovieDetails_addInfoItem__ArYHM\",\"detailsMainContainer\":\"MovieDetails_detailsMainContainer__PKx+V\"};","import { useQuery } from '@tanstack/react-query';\nimport React, { Suspense } from 'react';\nimport { CirclesWithBar } from 'react-loader-spinner';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { options } from '../../constants/constants';\nimport { fetchMovieDetails } from '../../services/fetchFilms';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const movieDetails = useQuery({\n    queryKey: ['movieDetails', movieId],\n    queryFn: fetchMovieDetails,\n  });\n  const movieInfo = movieDetails?.data;\n  const loading = movieDetails?.isFetching;\n  if (!movieInfo)\n    return (\n      <div>\n        <Link className={css.goBackLink} to={location?.state?.from ?? '/'}>\n          &#8592; Go back\n        </Link>\n        {loading && <CirclesWithBar {...options} />}\n      </div>\n    );\n  const defaultPath = '../../images/notFound.jpg';\n  const { title, poster_path, vote_average, overview, genres = [] } = movieInfo;\n  return (\n    <div className={css.detailsMainContainer}>\n      <Link className={css.goBackLink} to={location?.state?.from ?? '/'}>\n        &#8592; Go back\n      </Link>\n      {movieInfo && (\n        <>\n          <div className={css.movieDescriptionContainer}>\n            {poster_path ? (\n              <img\n                className=\"poster\"\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title}\n              />\n            ) : (\n              <img src={defaultPath} alt=\"#\" />\n            )}\n            <div className={css.movieDescription}>\n              <h2>{title}</h2>\n              <span>User score: {Math.ceil(vote_average * 10)}%</span>\n              <h3>Overview:</h3>\n              <span>{overview}</span>\n              <h4>Genres:</h4>\n              <span>{genres.map(({ name }) => name).join(', ')}</span>\n            </div>\n          </div>\n          <div className={css.addInfoContainer}>\n            <p className={css.addInfoTitle}>Additional information:</p>\n            <ul className={css.addInfoList}>\n              <li>\n                <Link\n                  to=\"cast\"\n                  className={css.addInfoItem}\n                  state={{ from: location?.state?.from }}\n                >\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"reviews\"\n                  className={css.addInfoItem}\n                  state={{ from: location?.state?.from }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n      <Suspense fallback={<CirclesWithBar {...options} />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["location","useLocation","movieId","useParams","movieDetails","useQuery","queryKey","queryFn","fetchMovieDetails","movieInfo","data","loading","isFetching","className","css","to","state","from","options","title","poster_path","vote_average","overview","genres","src","alt","Math","ceil","map","name","join","Suspense","fallback"],"sourceRoot":""}