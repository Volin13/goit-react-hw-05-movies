{"version":3,"file":"static/js/729.d2b4974c.chunk.js","mappings":"oLAEMA,EAAgBC,EAAAA,GAAAA,IAAH,wHAYnB,UAJiB,WACf,OAAO,SAACD,EAAD,iCACR,C,wJCXD,EAAuB,wBAAvB,EAA2D,6BAA3D,EAAkG,2B,SC4BlG,EA1BkB,SAAC,GAAmC,IAAjCE,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAKpC,OACE,kBAAMC,UAAWC,EAAUF,SALJ,SAAAG,GACvBA,EAAMC,iBACNJ,GACD,EAEC,WACE,kBACEC,UAAWC,EACXG,KAAK,OACLP,MAAOA,EACPC,SAAUA,KAEZ,mBAAQE,UAAWC,EAAaG,KAAK,SAArC,sBAKL,E,8BCyBD,EArCe,WAAO,IAAD,IACnB,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAoCC,EAAAA,EAAAA,UAASF,GAA7C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAiBC,EAAAA,EAAAA,GAAS,CAC9BC,SAAU,CAACJ,GACXK,QAASC,EAAAA,KAELC,EAAM,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAgBM,YAAnB,aAAG,EAAsBC,QAC/BC,EAAO,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAgBS,WAE1BC,GAAWC,EAAAA,EAAAA,MASjB,OACE,iCACE,0BACE,SAAC,EAAD,CACE3B,MAAOW,EACPV,SAZkB,SAAC,GAAgB,IAAd2B,EAAa,EAAbA,OAC3BlB,EAAgBkB,EAAO5B,MAAQ,CAAEW,MAAOiB,EAAO5B,OAAU,CAAC,EAC3D,EAWOE,SATiB,WACvBa,EAAeJ,EAChB,MAUIa,IAAW,SAAC,MAAD,UAAoBK,EAAAA,KACzB,OAANR,QAAM,IAANA,OAAA,EAAAA,EAAQS,QAAS,IAAK,SAACC,EAAA,EAAD,CAAYV,OAAQA,EAAQK,SAAUA,IACzC,KAAb,OAANL,QAAM,IAANA,OAAA,EAAAA,EAAQS,UAAgB,SAAC,UAAD,MAG9B,C","sources":["pages/404/404.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledSection = styled.div`\n  font-size: 50px;\n  text-align: center;\n  margin: auto;\n  color: red;\n  margin-top: 50px;\n`;\n\nconst NotFound = () => {\n  return <StyledSection>404 Page not found.</StyledSection>;\n};\n\nexport default NotFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"formInput\":\"SearchBar_formInput__bdzt7\",\"formBtn\":\"SearchBar_formBtn__Z+YNJ\"};","import PropTypes from 'prop-types';\nimport css from './SearchBar.module.css';\n\nconst SearchBar = ({ value, onChange, onSubmit }) => {\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    onSubmit();\n  };\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <input\n        className={css.formInput}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n      <button className={css.formBtn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React, { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { CirclesWithBar } from 'react-loader-spinner';\nimport { options } from '../../constants/constants';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { fetchSearch } from '../../services/fetchFilms';\nimport NotFound from 'pages/404/404';\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const query = searchParams.get('query') ?? '';\n  const [searchKey, setSearchQuery] = useState(query);\n\n  const searchedMovies = useQuery({\n    queryKey: [searchKey],\n    queryFn: fetchSearch,\n  });\n  const movies = searchedMovies?.data?.results;\n  const loading = searchedMovies?.isFetching;\n\n  const location = useLocation();\n\n  const handleInputChange = ({ target }) => {\n    setSearchParams(target.value ? { query: target.value } : {});\n  };\n\n  const handleFormSubmit = () => {\n    setSearchQuery(query);\n  };\n  return (\n    <>\n      <div>\n        <SearchBar\n          value={query}\n          onChange={handleInputChange}\n          onSubmit={handleFormSubmit}\n        />\n      </div>\n      {loading && <CirclesWithBar {...options} />}\n      {movies?.length > 0 && <MoviesList movies={movies} location={location} />}\n      {movies?.length === 0 && <NotFound />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["StyledSection","styled","value","onChange","onSubmit","className","css","event","preventDefault","type","useSearchParams","searchParams","setSearchParams","query","get","useState","searchKey","setSearchQuery","searchedMovies","useQuery","queryKey","queryFn","fetchSearch","movies","data","results","loading","isFetching","location","useLocation","target","options","length","MoviesList"],"sourceRoot":""}